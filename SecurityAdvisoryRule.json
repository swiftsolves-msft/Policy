{
    "mode": "All",
    "policyRule": {
      "if": {
        "field": "type",
        "equals": "Microsoft.Resources/subscriptions"
      },
      "then": {
        "effect": "deployIfNotExists",
        "details": {
          "type": "Microsoft.Insights/activityLogAlerts",
          "name": "[parameters('activityLogAlertName')]",
          "existenceScope": "resourcegroup",
          "ResourceGroupName": "[parameters('resourceGroupName')]",
          "deploymentScope": "subscription",
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "existenceCondition": {
            "allOf": [
              {
                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].anyOf[*].equals",
                "equals": "Security"
              }
            ]
          },
          "deployment": {
            "location": "eastus",
            "properties": {
              "mode": "incremental",
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "activityLogAlertName": {
                    "type": "string"
                  },
                  "actionGroupResourceId": {
                    "type": "string"
                  },
                  "resourceGroupName": {
                    "type": "string"
                  },
                  "resourceGroupLocation": {
                    "type": "string"
                  },
                  "createResourceGroup": {
                    "type": "bool"
                  },
                  "guidValue": {
                    "type": "string",
                    "defaultValue": "[newGuid()]"
                  }
                },
                "variables": {
                  "scopeDescription": "scope for subscription {0}"
                },
                "resources": [
                  {
                    "condition": "[parameters('createResourceGroup')]",
                    "name": "[parameters('resourceGroupName')]",
                    "type": "Microsoft.Resources/resourceGroups",
                    "apiVersion": "2019-10-01",
                    "location": "[parameters('resourceGroupLocation')]"
                  },
                  {
                    "type": "Microsoft.Resources/deployments",
                    "apiVersion": "2019-10-01",
                    "name": "[concat('nestedSARDeployment', '_', parameters('guidValue'))]",
                    "resourceGroup": "[parameters('resourceGroupName')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Resources/resourceGroups/', parameters('resourceGroupName'))]"
                    ],
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {},
                        "variables": {},
                        "resources": [
                            {
                                "type": "Microsoft.Insights/activityLogAlerts",
                                "apiVersion": "2017-04-01",
                                "name": "[parameters('activityLogAlertName')]",
                                "location": "Global",
                                "properties": {
                                    "enabled": true,
                                    "scopes": [
                                        "[subscription().id]"
                                    ],
                                    "condition": {
                                        "allOf": [
                                          {
                                            "field": "category",
                                            "equals": "ServiceHealth",
                                            "containsAny": null,
                                            "odata.type": null
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "field": "properties.incidentType",
                                                "equals": "Security",
                                                "containsAny": null,
                                                "odata.type": null
                                              }
                                            ],
                                            "odata.type": null
                                          },
                                          {
                                            "field": "properties.impactedServices[*].ImpactedRegions[*].RegionName",
                                            "equals": null,
                                            "containsAny": [
                                              "Global"
                                            ],
                                            "odata.type": null
                                          }
                                        ],
                                        "odata.type": null
                                      },
                                    "actions": {
                                        "actionGroups": [
                                            {
                                                "actionGroupId": "[parameters('actionGroupResourceId')]"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                      }
                    }
                  }
                ]
              },
              "parameters": {
                "activityLogAlertName": {
                  "value": "[parameters('activityLogAlertName')]"
                },
                "actionGroupResourceId": {
                    "value": "[parameters('actionGroupResourceId')]"
                },
                "resourceGroupName": {
                  "value": "[parameters('resourceGroupName')]"
                },
                "resourceGroupLocation": {
                  "value": "[parameters('resourceGroupLocation')]"
                },
                "createResourceGroup": {
                  "value": "[parameters('createResourceGroup')]"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "activityLogAlertName": {
        "type": "String",
        "defaultValue": "Security Advisory Rule",
        "metadata": {
          "displayName": "Security Advisory Rule name",
          "description": "This is the Service health - Security Advisory Rule name."
        }
      },
      "actionGroupResourceId": {
        "type": "String",
        "metadata": {
          "displayName": "The Action Group Resource ID",
          "description": "The Action Group Resource ID that will be used upon Security Advisory alert trigger"
        }
      },
      "resourceGroupName": {
        "type": "String",
        "defaultValue": "rgServiceHealth",
        "metadata": {
          "displayName": "Resource group name",
          "description": "The resource group name where the workflow automation is created. If you enter a name for a resource group that doesn't exist, it'll be created in the subscription."
        }
      },
      "resourceGroupLocation": {
        "type": "String",
        "metadata": {
          "displayName": "Resource group location",
          "description": "The location where the resource group and the workflow automation are created.",
          "strongType": "location"
        }
      },
      "createResourceGroup": {
        "type": "Boolean",
        "metadata": {
          "displayName": "Create resource group",
          "description": "If a resource group does not exists in the scope, a new resource group will be created. If the resource group exists and this flag is set to 'true' the policy will re-deploy the resource group. Please note this will reset any Azure Tag on the resource group."
        },
        "allowedValues": [
          true,
          false
        ],
        "defaultValue": true
      }
    }
  }